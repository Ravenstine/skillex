#!/usr/bin/env node

'use strict';

const exec  = require('child_process').execSync;
const spawn = require('child_process').spawnSync;
const fs    = require('fs');
const YAML  = require('js-yaml');
const _     = require('lodash');

switch(process.argv[2]){
  case 'bundle':
    exec(`${__dirname}/bundle`);
    break;
  case 'build-models':
    exec(`${__dirname}/build-models`);
    break;
  case 'build':
    spawn(`${__dirname}/build`, { stdio: 'inherit' });
    break;
  case 'deploy':
    spawn(`${__dirname}/deploy`, { stdio: 'inherit' });
    break;
  case 'new':
    console.log("Creating a new skill...")
    let skillName = process.argv[3];
    if(!skillName) return console.error('ERROR: Skill name is required.');
    let skillPhrase = _.startCase(skillName).toLowerCase();
    let skillDir  = `${process.cwd()}/${skillName}`;
    // Copy base files
    exec(`cp -r ${__dirname}/../blueprints ${skillDir}`);
    // Install dependencies
    spawn(`npm`, ['install', '--prefix', `${skillDir}`], { stdio: 'inherit' });
    // Write the provided skill name to the interaction model invocation name
    let model = YAML.safeLoad(fs.readFileSync(`${skillDir}/interaction-model.yml`, 'utf8'));
    model.languageModel.invocationName = skillPhrase;
    fs.writeFileSync(`${skillDir}/interaction-model.yml`, YAML.dump(model), 'utf8');
    let skill = JSON.parse(fs.readFileSync(`${skillDir}/skill.json`, 'utf8'));
    // Write the provided skill name to the skill manifest
    skill.skillManifest.publishingInformation.locales['en-US'].name = skillName;
    skill.skillManifest.publishingInformation.locales['en-US'].examplePhrases = [`Alexa open ${skillPhrase}`];
    fs.writeFileSync(`${skillDir}/skill.json`, JSON.stringify(skill, null, 2), 'utf8');
    // Write config
    let config = JSON.parse(fs.readFileSync(`${skillDir}/.ask/config`, 'utf8'));
    config.deploy_settings.default.merge.skillManifest.apis.custom.endpoint.uri = `ask-custom-${skillName}-default`;
    fs.writeFileSync(`${skillDir}/.ask/config`, JSON.stringify(config, null, 2), 'utf8');
    // Write package
    let package = JSON.parse(fs.readFileSync(`${skillDir}/package.json`, 'utf8'));
    package.name = skillName;
    fs.writeFileSync(`${skillDir}/package.json`, JSON.stringify(config, null, 2), 'utf8');
    break;
  default:
    let packageJSON = require('../package.json');
    console.log(`
      Usage:  skillex COMMAND

      Build Alexa skills.

      Commands:
        new                Create a new skill in the current directory
        build-models       Compile interaction model
        bundle             Build an optimized bundle of the current skill

      Version: ${packageJSON.version}
    `);
}

